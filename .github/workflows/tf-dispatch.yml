name: "Terraform Infrastructure Pipeline"

on:
  workflow_dispatch:
    inputs:
      environment:
        description: "The environment to deploy (e.g., dev, test, prod)"
        required: true
        default: "dev"
        type: string
      working_dir:
        description: "Working directory for Terraform"
        required: true
        type: string
      backend_config_path:
        description: "Path to the backend config file"
        required: true
        type: string
      backend_key:
        description: "Key for the backend configuration"
        required: true
        type: string
      plan_only:
        description: "Run Terraform plan only"
        required: false
        default: true
        type: boolean
      destroy:
        description: "Destroy the infrastructure"
        required: false
        default: false
        type: boolean

permissions:
  contents: read
  id-token: write

jobs:
  checkout_code:
    name: Checkout Code
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

  sonar_analysis:
    name: SonarQube Quality Scanner
    if: ${{ github.event.inputs.environment == 'dev' }}
    runs-on: ubuntu-latest
    needs: checkout_code
    steps:
      - name: Run SonarQube Scan for Terraform
        uses: sonarsource/sonarqube-scan-action@v1
        env:
          GIT_TOKEN: ${{ secrets.GIT_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        with:
          args: >
            -Dsonar.organization=terraform-scan
            -Dsonar.projectKey=terraform-sonar
            -Dsonar.host.url=${{ secrets.SONAR_HOST_URL }}

  call_terraform_pipeline:
    name: Terraform Pipeline
    uses: venkatkumarp/tf-wrokflow-call/.github/workflows/tf-workflow.yml@main
    with:
      environment: ${{ github.event.inputs.environment }}
      working_dir: ${{ github.event.inputs.working_dir }}
      backend_config_path: ${{ github.event.inputs.backend_config_path }}
      backend_key: ${{ github.event.inputs.backend_key }}
      plan_only: ${{ github.event.inputs.plan_only }}
      destroy: ${{ github.event.inputs.destroy }}
    secrets:
      org_repos_internal_read_only: ${{ secrets.org_repos_internal_read_only }}
      aws_oidc_assume_role: ${{ secrets.aws_oidc_assume_role }}
      tf_env_vars: ${{ secrets.tf_env_vars }}

  generate_deployment_report:
    name: Generate Deployment Report
    runs-on: ubuntu-latest
    needs: call_terraform_pipeline
    steps:
      - name: Generate Deployment Summary
        run: |
          echo "# Infra Deployment Report" >> $GITHUB_STEP_SUMMARY
          echo "| Run Number | Environment | Author | Deploy Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|-------------|--------|---------------|" >> $GITHUB_STEP_SUMMARY
          echo "| ${{ github.run_number }} | ${{ github.event.inputs.environment }} | ${{ github.actor }} | success |" >> $GITHUB_STEP_SUMMARY
          echo "Job summary generated at run-time" >> $GITHUB_STEP_SUMMARY
